#!/bin/bash

# set the number of nodes and processes per node
#PBS -q qmw12 -l select=1:ncpus=12:host=matlabcl3

# set name of job
#PBS -N MATLABgpu
# use submission environment
#PBS -V


# Upload CUDA 7.5 environment 
echo "Uploading Cuda 7.5 Environment : source /apps/cuda-7.5.sh" 
source /apps/cuda-7.5.sh

# start the job from the directory it was submitted
echo "start the job from the directory it was submitted"
echo "cd  $PBS_O_WORKDIR"
cd $PBS_O_WORKDIR

export INPUT=paralleldemo_gpu_backslash.m   # (THIS VARIABLE MUST BE EQUAL TO YOUR MATLAB INPUT FILE !)

# input files check before submitting
if [ ! -f $PBS_O_WORKDIR/$INPUT ]; then
        echo "missing $PBS_O_WORKDIR/$INPUT  Matlab input file"
        exit 1
fi

# set some variables...
export MCRROOT=/usr/local/MATLAB/R2016a
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MCRROOT/sys/os/glnxa64:$MCRROOT/sys/java/jre/glnxa64/jre/lib/amd64/server:$MCRROOT/sys/java/jre/glnxa64/jre/lib/amd64:$MCRROOT/sys/opengl/lib/glnxa64
echo $LD_LIBRARY_PATH
echo " "
export PATH=/usr/local/MATLAB/R2016a/bin:$PATH
echo $PATH
echo " "

############################################################
#                                                          #
#    Execute the run.  Do not run in the background.       #
#                                                          #
############################################################

echo "running Matlab job in " `pwd`
echo "matlab -nodisplay -nodesktop -nosplash ... "
#time matlab -nodisplay -nodesktop -nosplash -r "paralleldemo_gpu_backslash, exit" >& paralleldemo_gpu_backslash.out >> time_matlabcl3_gpu.out.12
matlab -nodisplay -nodesktop -nosplash -r "paralleldemo_gpu_backslash, exit" >& paralleldemo_gpu_backslash.out

echo "Job completed"
exit

